// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// Cbiweight
NumericMatrix Cbiweight(NumericVector grid_x, NumericVector grid_y, NumericVector input_x, NumericVector input_y, NumericMatrix input_val, double radius, bool ind_normalize);
RcppExport SEXP _biweight_Cbiweight(SEXP grid_xSEXP, SEXP grid_ySEXP, SEXP input_xSEXP, SEXP input_ySEXP, SEXP input_valSEXP, SEXP radiusSEXP, SEXP ind_normalizeSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type grid_x(grid_xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type grid_y(grid_ySEXP);
    Rcpp::traits::input_parameter< NumericVector >::type input_x(input_xSEXP);
    Rcpp::traits::input_parameter< NumericVector >::type input_y(input_ySEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type input_val(input_valSEXP);
    Rcpp::traits::input_parameter< double >::type radius(radiusSEXP);
    Rcpp::traits::input_parameter< bool >::type ind_normalize(ind_normalizeSEXP);
    rcpp_result_gen = Rcpp::wrap(Cbiweight(grid_x, grid_y, input_x, input_y, input_val, radius, ind_normalize));
    return rcpp_result_gen;
END_RCPP
}
// Csimple
NumericMatrix Csimple(NumericVector grid_x, NumericMatrix val);
RcppExport SEXP _biweight_Csimple(SEXP grid_xSEXP, SEXP valSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< NumericVector >::type grid_x(grid_xSEXP);
    Rcpp::traits::input_parameter< NumericMatrix >::type val(valSEXP);
    rcpp_result_gen = Rcpp::wrap(Csimple(grid_x, val));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_biweight_Cbiweight", (DL_FUNC) &_biweight_Cbiweight, 7},
    {"_biweight_Csimple", (DL_FUNC) &_biweight_Csimple, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_biweight(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
